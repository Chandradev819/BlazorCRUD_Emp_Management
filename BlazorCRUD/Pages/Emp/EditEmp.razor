@page "/EditEmp/{CurrentID}"
@using BlazorCRUD.Data;
@inject EmpService objEmpService
@inject NavigationManager objNavigationManager

<h2>Update Employee</h2>
<hr />
<EditForm Model="@objEmp" OnValidSubmit="UpdateEmp">
    <FluentValidator TValidator="EmpValidator" />
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="Name" class="control-label">Name</label>
                <InputText id="Name" class="form-control" @bind-Value="@objEmp.Name" />
                <ValidationMessage For="@(()=> objEmp.Name)" />
            </div>
            <div class="form-group">
                <label for="Name" class="control-label">Gender</label>
                <InputSelect class="form-control" id="Gender" @bind-Value="@objEmp.Gender">
                    <option value="">Select</option>
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                </InputSelect>
                <ValidationMessage For="@(()=> objEmp.Gender)" />
            </div>
            <div class="form-group">
                <label for="Country" class="control-label">Country</label>
                <InputText id="Country" class="form-control" @bind-Value="@objEmp.Country" />
                <ValidationMessage For="@(()=> objEmp.Country)" />
            </div>
            <div class="form-group">
                <label for="City" class="control-label">City</label>
                <InputText id="City" class="form-control" @bind-Value="@objEmp.City" />
                <ValidationMessage For="@(()=> objEmp.City)" />
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <button type="submit" class="btn btn-primary">@ButtonName</button>
                <a href="/Emp" class="btn btn-primary">Cancel</a>
            </div>
        </div>
    </div>
</EditForm>


@code {
    [Parameter]
    public string CurrentID { get; set; } 
    public string ButtonName { get; set; }
    EmployeeInfo objEmp = new EmployeeInfo();

    protected override async Task OnInitializedAsync()
    {
        ButtonName = "Update";
        objEmp = await Task.Run(() =>objEmpService.GetEmpById(Convert.ToInt32(CurrentID)));
    }
    protected void UpdateEmp()
    {
        objEmpService.UpdateEmp(objEmp);
        objNavigationManager.NavigateTo("Emp");
    }
    protected void Cancel()
    {
        objNavigationManager.NavigateTo("/Emp");
        
    }
    
}
