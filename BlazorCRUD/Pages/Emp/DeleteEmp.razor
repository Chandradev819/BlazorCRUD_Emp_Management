@page "/DeleteEmp/{CurrentID}"
@inject IEmpService EmpService
@inject NavigationManager objNavigationManager
@inject ILogger<DeleteEmp> Logger

<h2>Delete Employee</h2>
<hr />
<h3>Are you sure do you want to delete this record</h3>
<div class="row">
    <div class="col-md-8">
        <div class="form-group">
            <label>EmpId:</label>
            <label>@objEmp.EmpId</label>
        </div>
        <div class="form-group">
            <label>Name:</label>
            <label>@objEmp.Name</label>
        </div>
        <div class="form-group">
            <label>Country:</label>
            <label>@objEmp.Country</label>
        </div>
        <div class="form-group">
            <label>City:</label>
            <label>@objEmp.City</label>
        </div>
        <div class="form-group">
            <label>Gender:</label>
            <label>@objEmp.Gender</label>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <input type="button" class="btn btn-danger" @onclick="@DeleteEmpInfo" value="Delete" />
            <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
        </div>

    </div>
</div>


@code {
    [Parameter]
    public string CurrentID { get; set; }
    EmployeeInfo objEmp = new EmployeeInfo();

    protected override async Task OnInitializedAsync()
    {
        objEmp = await Task.Run(() => EmpService.GetEmpById(Convert.ToInt32(CurrentID)));
    }
    protected void DeleteEmpInfo()
    {
        try
        {
            EmpService.DeleteEmp(objEmp);
            objNavigationManager.NavigateTo("Emp");
        }
        catch (Exception ex)
        {
            Logger.LogInformation(ex.StackTrace);
        }

    }
    void Cancel()
    {
        objNavigationManager.NavigateTo("Emp");
    }
}
